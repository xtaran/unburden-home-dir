name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push
  push:
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: ['ubuntu-latest']
        perl:
          - "latest"
#          - "5.34"
#          - "5.32"
#          - "5.30"
#          - "5.28"
#          - "5.26"
#          - "5.24"
#          - "5.22"
#          - "5.20"
#          - "5.18"
#          - "5.16"
#          - "5.14"
#          - "5.12"
          - "5.10"
#        include:
#          - os: "macos-latest"
#            perl: "latest"
    name: Perl ${{ matrix.perl }} on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up perl
        uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: ${{ matrix.perl }}
          install-modules-with: cpanm
          install-modules-args: --verbose --notest --skip-satisfied
          install-modules: Config::File File::BaseDir File::Rsync File::Touch File::Which IPC::Run Moo Test::Differences Test::File Test::Perl::Critic String::Random String::Expand Try::Tiny File::Slurper
      - run: env | sort
      - run: perl -V
      - run: env RELEASE_TESTING=1 AUTOMATED_TESTING=1 AUTHOR_TESTING=1 HARNESS_OPTIONS=j10:c HARNESS_TIMER=1 make pureperltest
  checkbashisms:
    runs-on: "ubuntu-latest"
    name: Check for bashisms
    steps:
      - uses: actions/checkout@v3
      - run: sudo apt-get install -y devscripts
      - run: make checkbashisms
  coverage:
    # Only run code coverage if the build actually succeeded
    needs: build
    environment: github-actions
    runs-on: 'ubuntu-latest'
    name: Run coverage checks
    env:
      COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up perl
        uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: "latest"
          install-modules-with: cpanm
          install-modules-args: --verbose --notest --skip-satisfied
          install-modules: Config::File File::BaseDir File::Rsync File::Touch File::Which IPC::Run Moo Test::Differences Test::File Test::Perl::Critic String::Random String::Expand Try::Tiny File::Slurper Devel::Cover Devel::Cover::Report::Codecovbash Devel::Cover::Report::Coveralls
      - run: perl -V
      - name: Run coverage tests
        run: make codecovbash coveralls
      - uses: codecov/codecov-action@v2
        with:
          files: cover_db/codecov.json
          verbose: true
